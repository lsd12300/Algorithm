
https://www.cnblogs.com/bluebean/articles/7398109.html


GJK算法:  
    碰撞检测算法
    仅对凸多边形有效
    比SAT(轴分离算法)效率高
    
    核心思想:
        如果两个物体相交,  则它们的明可夫斯基差肯定包含原点
    

凸多边形:
    任意一条直线和凸多边形所有边的交点不超过两个
    
    
明可夫斯基和:
    物体1上的所有点和物体2上的所有点的合集.  
    两物体所有点坐标分别相加 然后取最外圈的点连成的凸多边形
    两个物体都是凸多边形时, 明可夫斯基和也是凸多边形
    

明可夫斯基差:
    物体1中所有点坐标 分别减去物体2中所有点坐标,  取最外圈点 连成的凸多边形
    
    
单纯形:
    n维最简单的图形.
    0维--点
    1维--线段
    2维--三角形
    
    
Support函数:
    计算出 多边形在给定方向上最远的顶点.  将顶点投影到给定的方向上, 取投影最大的点
    
    在物体1上取给定方向上的最远点, 在物体2上取给定方向反方向的最远点,  两个点作差得出的点一定在 明可夫斯基差的边线上
    
    
    
GJK算法步骤:
    (由于不需要明确计算出 明可夫斯基差的凸多边形, 仅需要使用单纯形判断是否包含原点即可)
    
    1. 选取初始方向.
        可以是两个多边形的中心点构成的矢量, 或者各自多边形上某一个点构成的矢量,  也可以是任意方向
        
    2. 使用Support函数计算 初始方向的 单纯形点
    
    3. 将初始方向取反, 作为新的迭代方向
    
    4. 循环:
        
        a. 根据迭代方向, 计算 Support点
        
        b. 判断: 原点到Support点的向量 和 迭代方向 点乘结果. 
        
            如果小于0 说明 明可夫斯基差的最大凸多边形无法跨越原点, 即不可能包含原点. 退出函数 返回false
            
                例如: dir=(1,0)时, Support点必须在原点右侧(点乘大于0)
                     dir=(-1,0)时, Support点必须在原点左侧(点乘大于0)
                     这样构成的凸多边形才能包含原点
            
            如果大于等于0 说明可能找到包含原点的单纯形,  将点加入到单纯形中
            
        c. 更新单纯形和迭代方向, 并判断单纯形是否包含原点.
            
            如果当前已有两个点. 则将两点直线的垂直线 朝原点的方向, 作为新的迭代方向
            
                AB x AO x AB  两次叉乘, 即可得到 AB的垂直线 朝原点方向
            
            如果当前已有三个点. 判断若包含原点, 则相交 返回结果.
                
                若不相交, 则保留离原点最近的边上的两个点,  则将两点直线的垂直线 朝原点的方向, 作为新的迭代方向